require('dotenv').config()
const Discord = require('discord.js')
const bot = new Discord.Client()
const randomPuppy = require('random-puppy')
const fs = require('fs')
const path = require('path')
const https = require('https')
const request = require('request')
const Chance = require('chance')
const axios = require('axios')

const chancejs = new Chance()

let options = {}

const subreddit = [
{
  i: 'dankmemes'
},
{
 i: 'niceguys'
},
{
 i: 'PornhubComments'
},
{
 i: 'softwaregore'
},
]

 try {
  const key = fs.readFileSync(path.resolve(__dirname, './encryption/server.key'))
  const cert = fs.readFileSync(path.resolve(__dirname, './encryption/server.cert'))
  options = {
    key,
    cert,
  }
 } catch (e) {
  console.log('error certification files', e)
messa}

 https.createServer(options, (req, res) => {
  res.writeHead(200)
 }).listen(9090)

bot.on('ready', () => {
  console.log("Je suis connecté !")
})

bot.login('NzA4NzYwNDY1OTk5NzkwMjQ0.XrcS_A.KmEzHuPhDHfIaG7qc2t6BimK-50')

bot.on('message', (message) => {
  if (message.content === 'ping') {
    message.channel.send('Pinging ...').then((msg) => {
      msg.edit(`Ping: ${Date.now() - msg.createdTimestamp}ms`)
    })
  }
})

bot.on('message', (message) => {
  if (message.content.startsWith('!memes')) {
    const rnd = chancejs.integer({ min: 0, max: 3 })
    randomPuppy(subreddit[rnd].i)
      .then((url) => {
         const embed = {
           "title": `meme from r/${subreddit[rnd].i}`,
           "url": url,
           "color": 43333,
           "image": {
             "url": url
           }
         }
         message.channel.send({ embed }).then((msg) => msg.react('⏩'))

         const filter = (reaction, user) => {
           return ['⏩'].includes(reaction.emoji.name) && user.id === message.author.id
         }

         message.awaitReactions(filter, { max: 1, time: 60000, errors: ['time'] })
          .then((collected) => {
             const reaction = collected.first()
             if (reaction.emoji.name === '⏩') {
                randomPuppy(subreddit[rnd].i)
                  .then((url) => {
                      const reply_embed = {
                        "title": `meme from r/${subreddit[rnd].i}`,
                        "url": url,
                        "color": 43333,
                        "image": {
                          "url": url
                        }
                                                 message.channel.send({ embed }).then((msg) => msg.react('⏩'))

                  })
             }
          })
      })
  }
})


bot.on('message', (message) => {
  if (message.content.startsWith('!r34')) {
    const args = message.content.slice('!r34').split(' ')
    console.log('args :', args[1])
    axios(`https://r34-json.herokuapp.com/posts?tags=${args[1]}&limit=300`, {
	method: 'GET',
    })
      .then((response) => {
        if (response.status === 500) {
	  message.channel.send('Il y a eu une erreur !')
        } else {
          if (response.data.posts.length === 0) {
             message.channel.send(`Aucun résultat pour ${args[1]}`)
          } 
          if (response.data.posts.length > 0) {
             const rnd = chancejs.integer({ min: 0, max: (response.data.posts).length - 1 })

             const embed = {
                 "title": `Résultat aléatoire pour ${args[1]}`,
                 "url": `${response.data.posts[rnd].sample_url}`,
                 "color": 43333,
                 "footer": {
                 "icon_url": "https://cdn.discordapp.com/app-icons/708760465999790244/228b2993e942a361518b557ee4511b26.png?size=32",
                 "text": "Made with ❤  by Alexandre Buisson"
                },
                "image": {
                    "url": `${response.data.posts[rnd].sample_url}`
                },
                "fields": [
                 {
                   "name": `Nombre de résultats`,
                   "value": `${response.data.posts.length}`
                 },
                 {
                   "name": "tags associés",
                   "value": `${response.data.posts[rnd].tags[0] || '/'}, ${response.data.posts[rnd].tags[1] || '/'}, ${response.data.posts[rnd].tags[2] || '/'}, ${response.data.posts[rnd].tags[3] || '/'}`
                 }
                ]
             };

             message.channel.send({ embed })
          }
        }
      })
  }
})

bot.on('message', (message) => {
  if (message.content.startsWith('!subreddit')) {
    const args = message.content.slice('!subreddit').split(' ')
     randomPuppy(args[1])
      .then(url => {
         message.channel.send(`random image from r/${args[1]} ${url}`)
      })

  }
})
